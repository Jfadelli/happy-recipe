{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\happy-recipe\\\\client\\\\src\\\\routes\\\\RecipeDetailPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport RecipeFinder from '../api/RecipeFinder';\nimport { RecipesContext } from '../context/appContext';\nimport Ingredients from '../components/Ingredients';\nimport AddIngredients from '../components/AddIngredients';\nimport Instructions from '../components/Instructions';\nimport AddInstructions from '../components/AddInstructions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecipeDetailPage = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    selectedRecipe,\n    setSelectedRecipe\n  } = useContext(RecipesContext);\n  const [edit, setEdit] = useState(false);\n\n  const handleEdit = () => {\n    if (edit === false) {\n      setEdit(true);\n    } else {\n      setEdit(false);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await RecipeFinder.get(`/${id}`);\n        setSelectedRecipe(response.data.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [setSelectedRecipe, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-detail-wrapper\",\n    children: selectedRecipe && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"recipe-title\",\n        children: selectedRecipe.recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Ingredients, {\n        ingredients: selectedRecipe.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddIngredients, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Instructions, {\n        instructions: selectedRecipe.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddInstructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeDetailPage, \"UVjOP4xMezavm3lWdGcCCkZ2cy4=\", false, function () {\n  return [useParams];\n});\n\n_c = RecipeDetailPage;\nexport default RecipeDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeDetailPage\");","map":{"version":3,"sources":["C:/Projects/happy-recipe/client/src/routes/RecipeDetailPage.jsx"],"names":["React","useState","useContext","useEffect","useParams","RecipeFinder","RecipesContext","Ingredients","AddIngredients","Instructions","AddInstructions","RecipeDetailPage","id","selectedRecipe","setSelectedRecipe","edit","setEdit","handleEdit","fetchData","response","get","data","err","console","log","recipe","name","ingredients","instructions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAOR,SAAS,EAAtB;AACA,QAAM;AAAES,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAuCZ,UAAU,CAACI,cAAD,CAAvD;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMgB,UAAU,GAAG,MAAM;AACrB,QAAIF,IAAI,KAAK,KAAb,EAAoB;AAChBC,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAEO;AACHA,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GAND;;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,SAAS,GAAG,YAAW;AACzB,UAAG;AACC,cAAMC,QAAQ,GAAG,MAAMd,YAAY,CAACe,GAAb,CAAkB,IAAGR,EAAG,EAAxB,CAAvB;AACAE,QAAAA,iBAAiB,CAACK,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAjB;AACH,OAHD,CAGE,OAAMC,GAAN,EAAW;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KAPD;;AAQAJ,IAAAA,SAAS;AACZ,GAVQ,EAUN,CAACJ,iBAAD,EAAoBF,EAApB,CAVM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,cACKC,cAAc,iBACX;AAAA,8BACA;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,kBAA8BA,cAAc,CAACY,MAAf,CAAsBC;AAApD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGJ,QAAC,WAAD;AAAa,QAAA,WAAW,EAAEb,cAAc,CAACc;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHI,eAIJ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAJI,eAKJ;AAAA;AAAA;AAAA;AAAA,cALI,eAMJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANI,eAQJ,QAAC,YAAD;AAAc,QAAA,YAAY,EAAEd,cAAc,CAACe;AAA3C;AAAA;AAAA;AAAA;AAAA,cARI,eASJ,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cATI;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA3CD;;GAAMjB,gB;UACWP,S;;;KADXO,gB;AA6CN,eAAeA,gBAAf","sourcesContent":["import React, {useState, useContext, useEffect } from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport RecipeFinder from '../api/RecipeFinder'\r\n\r\nimport { RecipesContext } from '../context/appContext'\r\n\r\nimport Ingredients from '../components/Ingredients'\r\nimport AddIngredients from '../components/AddIngredients'\r\n\r\nimport Instructions from '../components/Instructions'\r\nimport AddInstructions from '../components/AddInstructions'\r\n\r\n\r\nconst RecipeDetailPage = () => {\r\n    const {id} = useParams();\r\n    const { selectedRecipe, setSelectedRecipe} = useContext(RecipesContext)\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const handleEdit = () => {\r\n        if (edit === false) {\r\n            setEdit(true)\r\n        } else {\r\n            setEdit(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () =>{\r\n            try{ \r\n                const response = await RecipeFinder.get(`/${id}`)\r\n                setSelectedRecipe(response.data.data)\r\n            } catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [setSelectedRecipe, id])\r\n\r\n    return (\r\n        <div className=\"recipe-detail-wrapper\">\r\n            {selectedRecipe && (\r\n                <>\r\n                <h1 className='recipe-title'>{selectedRecipe.recipe.name}</h1>\r\n                <h1>Ingredients</h1>\r\n            <Ingredients ingredients={selectedRecipe.ingredients} />\r\n            <AddIngredients/>\r\n            <hr></hr>\r\n            <h1>Instructions</h1>\r\n            \r\n            <Instructions instructions={selectedRecipe.instructions}/>\r\n            <AddInstructions />\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecipeDetailPage\r\n"]},"metadata":{},"sourceType":"module"}